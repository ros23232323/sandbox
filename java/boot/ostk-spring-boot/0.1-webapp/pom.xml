<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>0.1</artifactId>
    <groupId>0.1</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>0.1-webapp</artifactId>
  <packaging>jar</packaging>
  
  <properties>
    <servletAPI.version>3.1.0</servletAPI.version>
    <tomcat.version>8.5.2</tomcat.version>
    <tomcatFramework.version>3.3</tomcatFramework.version>
    <java.version>1.8</java.version>
    <local.log4j.properties>classpath:/log4j2.xml</local.log4j.properties>
    <log4j.properties>${app.deploy.dir}/conf/0.1-log4j2.xml</log4j.properties>
    <ostk-spring-web-support.version>1.4</ostk-spring-web-support.version>
  </properties>
  
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/docker</directory>
        <filtering>true</filtering>
        <targetPath>${project.build.directory}/docker</targetPath>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <rules>
            <banDuplicateClasses>
              <ignoreClasses>
                <!-- This is because of embedded Tomcat -->
                <ignoreClass>javax.persistence.*</ignoreClass>
                <ignoreClass>javax.servlet.*</ignoreClass>
                <ignoreClass>org.xmlpull.*</ignoreClass>
                <ignoreClass>javax.el.*</ignoreClass>
              </ignoreClasses>
            </banDuplicateClasses>
          </rules>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>

        <configuration>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
          </excludes>
        </configuration>

        <!-- Dont run integration test in Test(s) phase -->
        <executions>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <skip>false</skip>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/*IntegrationTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- Dev Tools must be excluded in Production -->
          <excludeDevtools>true</excludeDevtools>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/assembly.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>
      <!--
        The Docker Maven Plugin is commented out by default. Add this if you want Docker images
       
      <plugin>
        <groupId>org.jolokia</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.13.6</version>
        <configuration>
          <images>
            <image>
              <alias>0.1</alias>
              <name>0.1/0.1</name>
              <build>
                <assembly>
                  <descriptor>assembly.xml</descriptor>
                  <mode>dir</mode>
                  <basedir>/</basedir>
                  <dockerFileDir>${project.build.directory}/docker</dockerFileDir>
                </assembly>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>docker:build</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      -->
    </plugins>
  </build>

  <dependencies>
    <!-- Overstock primary frameworks -->
    <dependency>
      <groupId>com.overstock.arch</groupId>
      <artifactId>JavaFramework</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    
    <dependency>
      <!-- Standard Overstock Filters and Listeners via Boot AutoConfig -->
      <groupId>com.overstock.arch</groupId>
      <artifactId>ostk-springboot-tomcat-config</artifactId>
      <version>1.3</version>
    </dependency>
    
    <dependency>
      <!-- Enables Spring/Bordello bridge + XMl Config -->
      <groupId>com.overstock.arch</groupId>
      <artifactId>ostk-springcloud-support</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>com.overstock.arch</groupId>
      <artifactId>TomcatFramework</artifactId>
      <version>${tomcatFramework.version}</version>
    </dependency>

    <!-- Dependency on the Common module  -->
    <dependency>
      <groupId>0.1</groupId>
      <artifactId>0.1-common</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <!-- Spring Cloud Netflix -->
    <dependency>
      <groupId>com.netflix.eureka</groupId>
      <artifactId>eureka-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xpp3</groupId>
          <artifactId>xpp3_min</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-netflix-eureka-client</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-netflix-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-commons</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-context</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>tomcat-embed-el</artifactId>
          <groupId>org.apache.tomcat.embed</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jcl-over-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>jcl-over-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>        
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>        
      </exclusions>
    </dependency>

    <dependency>
      <!-- Templating -->
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>

    <dependency>
      <!--  This will and should NOT get bundled in the final JAR. Look at the packaging code -->
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
    </dependency>

     <dependency>
      <!-- NOTE!!!!! : Spring Boot Actuator exposes certain URIs of you app for metrics, monitoring and control
        It is safe to remove this if you do not want monitoring 
       -->
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
       <!--  Cloud Actuator end point support for pause/shutdown-->
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>jcl-over-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>log4j-over-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>logback-classic</artifactId>
          <groupId>ch.qos.logback</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Core libraries -->
    <dependency>
      <!-- We do not want to use the one from Eureka as that is a client with JAX-RS API 1.X budled in it -->
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-core</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>4.1.0.Final</version>
    </dependency>

    <!-- Swagger Documentation -->
    <dependency>
      <groupId>com.overstock.arch</groupId>
      <artifactId>springfox-feature</artifactId>
      <version>1.0</version>
    </dependency>

   <!-- Spring Boot Actuator Docs and HAL Browser -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-actuator-docs</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>hal-browser</artifactId>
    </dependency>

    <!-- Controlling Embedded Tomcat version explicitly rather than take what we get via spring-boot-starter-tomcat -->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <version>${tomcat.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-el</artifactId>
      <version>${tomcat.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-websocket</artifactId>
      <version>${tomcat.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-logging-juli</artifactId>
      <version>${tomcat.version}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>2.7.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
