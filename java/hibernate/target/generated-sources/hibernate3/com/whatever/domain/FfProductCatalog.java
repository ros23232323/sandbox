package com.whatever.domain;
// Generated 17-Aug-2016 11:42:42 by Hibernate Tools 3.2.2.GA


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * FfProductCatalog generated by hbm2java
 */
@Entity
@Table(name="FF_PRODUCT_CATALOG"
    ,schema="FREIGHT_FORWARDER"
)
public class FfProductCatalog  implements java.io.Serializable {


     private BigDecimal id;
     private FreightForwarder freightForwarder;
     private RetailOrderSource retailOrderSource;
     private BigDecimal productId;
     private String originCountryCd;
     private String destinationCountryCd;
     private Set<FfCostCatalog> ffCostCatalogs = new HashSet<FfCostCatalog>(0);

    public FfProductCatalog() {
    }

	
    public FfProductCatalog(BigDecimal id, FreightForwarder freightForwarder, BigDecimal productId) {
        this.id = id;
        this.freightForwarder = freightForwarder;
        this.productId = productId;
    }
    public FfProductCatalog(BigDecimal id, FreightForwarder freightForwarder, RetailOrderSource retailOrderSource, BigDecimal productId, String originCountryCd, String destinationCountryCd, Set<FfCostCatalog> ffCostCatalogs) {
       this.id = id;
       this.freightForwarder = freightForwarder;
       this.retailOrderSource = retailOrderSource;
       this.productId = productId;
       this.originCountryCd = originCountryCd;
       this.destinationCountryCd = destinationCountryCd;
       this.ffCostCatalogs = ffCostCatalogs;
    }
   
     @Id 
    
    @Column(name="ID", unique=true, nullable=false, precision=38, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="FREIGHT_FORWARDER_ID", nullable=false)
    public FreightForwarder getFreightForwarder() {
        return this.freightForwarder;
    }
    
    public void setFreightForwarder(FreightForwarder freightForwarder) {
        this.freightForwarder = freightForwarder;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="RETAIL_ORDER_SOURCE_ID")
    public RetailOrderSource getRetailOrderSource() {
        return this.retailOrderSource;
    }
    
    public void setRetailOrderSource(RetailOrderSource retailOrderSource) {
        this.retailOrderSource = retailOrderSource;
    }
    
    @Column(name="PRODUCT_ID", nullable=false, precision=38, scale=0)
    public BigDecimal getProductId() {
        return this.productId;
    }
    
    public void setProductId(BigDecimal productId) {
        this.productId = productId;
    }
    
    @Column(name="ORIGIN_COUNTRY_CD", length=2)
    public String getOriginCountryCd() {
        return this.originCountryCd;
    }
    
    public void setOriginCountryCd(String originCountryCd) {
        this.originCountryCd = originCountryCd;
    }
    
    @Column(name="DESTINATION_COUNTRY_CD", length=2)
    public String getDestinationCountryCd() {
        return this.destinationCountryCd;
    }
    
    public void setDestinationCountryCd(String destinationCountryCd) {
        this.destinationCountryCd = destinationCountryCd;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="ffProductCatalog")
    public Set<FfCostCatalog> getFfCostCatalogs() {
        return this.ffCostCatalogs;
    }
    
    public void setFfCostCatalogs(Set<FfCostCatalog> ffCostCatalogs) {
        this.ffCostCatalogs = ffCostCatalogs;
    }




}


