package com.whatever.domain;
// Generated 17-Aug-2016 11:42:42 by Hibernate Tools 3.2.2.GA


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * RetailOrderSource generated by hbm2java
 */
@Entity
@Table(name="RETAIL_ORDER_SOURCE"
    ,schema="FREIGHT_FORWARDER"
    , uniqueConstraints = @UniqueConstraint(columnNames="NAME") 
)
public class RetailOrderSource  implements java.io.Serializable {


     private BigDecimal id;
     private String name;
     private Set<FfProductCatalog> ffProductCatalogs = new HashSet<FfProductCatalog>(0);
     private Set<FfRetailOrder> ffRetailOrders = new HashSet<FfRetailOrder>(0);

    public RetailOrderSource() {
    }

	
    public RetailOrderSource(BigDecimal id, String name) {
        this.id = id;
        this.name = name;
    }
    public RetailOrderSource(BigDecimal id, String name, Set<FfProductCatalog> ffProductCatalogs, Set<FfRetailOrder> ffRetailOrders) {
       this.id = id;
       this.name = name;
       this.ffProductCatalogs = ffProductCatalogs;
       this.ffRetailOrders = ffRetailOrders;
    }
   
     @Id 
    
    @Column(name="ID", unique=true, nullable=false, precision=38, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }
    
    @Column(name="NAME", unique=true, nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="retailOrderSource")
    public Set<FfProductCatalog> getFfProductCatalogs() {
        return this.ffProductCatalogs;
    }
    
    public void setFfProductCatalogs(Set<FfProductCatalog> ffProductCatalogs) {
        this.ffProductCatalogs = ffProductCatalogs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="retailOrderSource")
    public Set<FfRetailOrder> getFfRetailOrders() {
        return this.ffRetailOrders;
    }
    
    public void setFfRetailOrders(Set<FfRetailOrder> ffRetailOrders) {
        this.ffRetailOrders = ffRetailOrders;
    }




}


