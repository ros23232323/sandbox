var Parse = require('parse/node');
var timeline = require('./timeline.js');
var userfeed = require('./user-feed.js');
var topicfeed = require('./topic-feed.js');
var cartCheckout = require('./cart-checkout.js');

// Just change this single var to change shopping site target env to use
var bareServerUrl = "dogfood.test";

var bareOverstockServerUrl = bareServerUrl + ".overstock.com";
var bareOstkServerUrl = bareServerUrl + ".ostk.com"; 

var apiServerOstk = "http://jweb01."  + bareOstkServerUrl + "/api/";
var checkoutApiServer = "http://checkoutapi-" + bareOverstockServerUrl + ":22400";

Parse.Cloud.define('hello', function(req, res) {
  res.success('Hello World');
});

Parse.Cloud.define('search', function(req, res) {
  Parse.Cloud.httpRequest({
    url: apiServerOstk + 'search.json?keywords=' + req.keywords
  }).then(function(httpResponse) {
    res.success(httpResponse.text);
  }, function(httpResponse) {
    console.error('search: request failed: ' + httpResponse.status);
    console.error(httpResponse.text);
    res.error(httpResponse.status);
  });
});

Parse.Cloud.define("timeline", function(request, response) {
  // can use request.user to get the requesting user

  var userId = request.params.userId;
  var limit = request.params.limit;
  var skip = request.params.skip;

  timeline.getTimelineForUser(userId, limit, skip, 
                              function (posts) { response.success(posts); }, 
                              function (error) { response.error(error.message); }
  );
});

Parse.Cloud.define("userfeed", function(request, response) {
  var userId = request.params.userId;
  var limit = request.params.limit;
  var skip = request.params.skip;

  userfeed.getUserFeed(userId, limit, skip, 
                       function (posts) { response.success(posts); },
                       function (error) { response.error(error.message); }
  );
});

Parse.Cloud.define("topicfeed", function(request, response) {
  var topicId = request.params.topicId;
  var limit = request.params.limit;
  var skip = request.params.skip;

  topicfeed.getTopicFeed(topicId, limit, skip,
                         function (posts) { response.success(posts); },
                         function (error) { response.error(error.message); }
  );
});

Parse.Cloud.define('addToCart', function(req, res){
  var productId = req.params.productId;
  var optionId = req.params.optionId;
  var quantity = req.params.quantity;
  var userId = req.params.userId;
  
  var result = cartCheckout.addItemToCart(
    apiServerOstk + 'cart.json',
    checkoutApiServer,
    userId, 
    productId, 
    optionId, 
    quantity,
    function(successMsg) { res.success(successMsg) },
    function(errMsg) {  res.error(errMsg) });
});

Parse.Cloud.define("hello", function(request, response) {
  response.success("Hello world!");
});

