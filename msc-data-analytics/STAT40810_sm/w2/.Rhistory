fit
x <- data$freq
fit<-optim(par=theta0,dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
dPoissonGamma_logtrue(c(1,1), data$freq)
dPoissonGamma_logfalse(c(.2,.2), data$freq)
dPoissonGamma <- function(x,alpha,beta,log=FALSE)
{
if (log)
{
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- sum(lognumer-logdenom)
}else
{
numer <- gamma(x+alpha)*beta^x
denom <- gamma(alpha)*(1+beta)^(alpha+x)*gamma(x+1)
res <- product(numer/denom)
}
res
}
dPoissonGamma_logfalse <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
dPoissonGamma(x,alpha,beta,FALSE)
}
dPoissonGamma_logtrue <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
dPoissonGamma(x,alpha,beta,TRUE)
}
dPoissonGamma_logtrue(c(1,1), data$freq)
dPoissonGamma_logfalse(c(.2,.2), data$freq)
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
x <- data$freq
alpha0<-0.515
beta0<-290.84
theta0<-c(alpha0,beta0)
theta0
fit<-optim(par=theta0,dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,dPoissonGamma_logfalse,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
prod(1:4)
dPoissonGamma <- function(x,alpha,beta,log=FALSE)
{
if (log)
{
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- sum(lognumer-logdenom)
}else
{
numer <- gamma(x+alpha)*beta^x
denom <- gamma(alpha)*(1+beta)^(alpha+x)*gamma(x+1)
res <- prod(numer/denom)
}
res
}
dPoissonGamma_logfalse <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
dPoissonGamma(x,alpha,beta,FALSE)
}
dPoissonGamma_logtrue <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
dPoissonGamma(x,alpha,beta,TRUE)
}
dPoissonGamma_logtrue(c(1,1), data$freq)
dPoissonGamma_logfalse(c(.2,.2), data$freq)
dPoissonGamma_logtrue(c(1,1), data$freq)
dPoissonGamma_logfalse(c(.2,.2), data$freq)
x <- data$freq
alpha0<-0.515
beta0<-290.84
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,dPoissonGamma_logfalse,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
dPoissonGamma_logfalse <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
dPoissonGamma(x,alpha,beta,FALSE)
}
dPoissonGamma_logtrue <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
dPoissonGamma(x,alpha,beta,TRUE)
}
dPoissonGamma_logtrue(c(1,1), data$freq)
dPoissonGamma_logfalse(c(.2,.2), data$freq)
dPoissonGamma_logtrue(theta0, data$freq)
dPoissonGamma_logfalse(theta0, data$freq)
dPoissonGamma(data$freq,alpha0,beta0,FALSE)
numer <- gamma(data$freq+alpha0)*beta0^data$freq
data$freq
alpha0
beta0
data$freq
gamma(data$freq+alpha0)*beta0^data$freq
gamma(alpha)*(1+beta0)^(alpha0+data$freq)*gamma(data$freq+1)
gamma(alpha0)*(1+beta0)^(alpha0+data$freq)*gamma(data$freq+1)
numer <- gamma(data$freq+alpha0)*beta0^data$freq
numer
denom <- gamma(alpha0)*(1+beta0)^(alpha0+data$freq)*gamma(data$freq+1)
denom
numer/denom
prod(numer/denom)
?prod
source('~/Documents/sandbox/msc-data-analytics/STAT40810_sm/w2/assignment.R', echo=TRUE)
prod(numer/denom, na.rm=TRUE)
exp(prod(numer/denom, na.rm=TRUE))
exp(prod(numer/denom, na.rm=TRUE))
exp(prod(numer/denom, na.rm=TRUE))
prod(numer/denom, na.rm=TRUE)
dPoissonGamma <- function(x,alpha,beta,log=FALSE)
{
if (log)
{
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- sum(lognumer-logdenom)
}else
{
numer <- gamma(x+alpha)*beta^x
denom <- gamma(alpha)*(1+beta)^(alpha+x)*gamma(x+1)
res <- prod(numer/denom, na.rm = TRUE)
}
res
}
dPoissonGamma_logfalse <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
dPoissonGamma(x,alpha,beta,FALSE)
}
dPoissonGamma_logtrue <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
dPoissonGamma(x,alpha,beta,TRUE)
}
dPoissonGamma_logtrue(theta0, data$freq)
dPoissonGamma_logfalse(theta0, data$freq)
dPoissonGamma_logfalse(theta0, data$freq)
x <- data$freq
alpha0<-0.515
beta0<-290.84
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,dPoissonGamma_logfalse,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,dPoissonGamma_logfalse,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
dPoissonGamma_logfalse <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- sum(lognumer-logdenom)
res
}
dPoissonGamma <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- sum(lognumer-logdenom)
res
}
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,dPoissonGamma,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
?optim
fit<-optim(par=theta0,fn=dPoissonGamma,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,fn=dPoissonGamma,method="SANN",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,fn=dPoissonGamma,method="CG",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,fn=dPoissonGamma,method="L-BFGS-B",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,fn=dPoissonGamma,method="Nelder-Mead",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit<-optim(par=theta0,fn=dPoissonGamma,method="Brent",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
loglik <- function(theta,x)
{
alpha <- theta[1]
beta <- theta[2]
sum(dweibull(x,alpha,beta,log=TRUE))
}
alpha0 <- 1
beta0 <- mean(kiama.data)
theta0 <- c(alpha0,beta0)
fit <- optim(par=theta0,loglik,method="BFGS",x=kiama.data,control=list(fnscale=-1),hessian=TRUE)
kiama.data <- c(83,17,28,60,51,55,56,61,87,10,8,61,60 ,28 ,95,35 ,47 ,77,25 ,68 ,146,18 ,169 ,25,8,36,89,8,27,17,18,26,15,21,73,11,10,36,69,83,18,18,9,11,16,40,37,42,29,10,10,17,54,7,82,14,91,34,29,9,8,27,8,12)
n <- length(kiama.data)
loglik <- function(theta,x)
{
alpha <- theta[1]
beta <- theta[2]
sum(dweibull(x,alpha,beta,log=TRUE))
}
alpha0 <- 1
beta0 <- mean(kiama.data)
theta0 <- c(alpha0,beta0)
fit <- optim(par=theta0,loglik,method="BFGS",x=kiama.data,control=list(fnscale=-1),hessian=TRUE)
fit
loglik <- function(theta,x)
{
alpha <- theta[1]
beta <- theta[2]
sum(dweibull(x,alpha,beta,log=TRUE))
}
loglik(theta0, kiama.data)
alpha0 <- 1
beta0 <- mean(kiama.data)
theta0 <- c(alpha0,beta0)
fit <- optim(par=theta0,loglik,method="BFGS",x=kiama.data,control=list(fnscale=-1),hessian=TRUE)
fit
alphagrid <- seq(0.8,1.6,length=41)
betagrid <- seq(30,60,length=41)
thetagrid <- expand.grid(alphagrid,betagrid)
thetagrid <- as.matrix(thetagrid)
lvec<-rep(NA,41^2)
for (i in 1:nrow(thetagrid))
{
lvec[i] <- loglik(thetagrid[i,],kiama.data)
}
lmat <- matrix(lvec,41,41)
image(alphagrid,betagrid,lmat,col=terrain.colors(12),xlab="alpha",ylab="beta")
contour(alphagrid,betagrid,lmat,add=TRUE)
points(fit$par[1],fit$par[2],pch=3,col="red")
text(fit$par[1],fit$par[2],
'MLE using \nweibull model', cex=1, pos=1, col="black" )
points(theta0[1],theta0[2],pch=3,col="blue")
text(theta0[1],theta0[2],
'MLE using \nexponential model', cex=1, pos=1, col="black" )
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma,method="Brent",x=x,control=list(fnscale=-1),hessian=TRUE)
fit<-optim(par=theta0,fn=dPoissonGamma,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
dPoissonGamma <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- sum(lognumer-logdenom)
res
}
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
data <- data.frame(list(num=c(0,1,2,3,4,5,7,9)),list(freq=c(584,398,168,35,9,4,1,1)))
dim(data)
dPoissonGamma <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- sum(lognumer-logdenom)
res
}
dPoissonGamma <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
print(paste(alpha,'  ', beta))
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- sum(lognumer-logdenom)
res
}
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
x <- data$freq
alpha0<-0.5
beta0<-290
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
dPoissonGamma <- function(x,alpha,beta,log=FALSE)
{
if (log)
{
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- lognumer-logdenom
}else
{
numer <- gamma(x+alpha)*beta^x
denom <- gamma(alpha)*(1+beta)^(alpha+x)*gamma(x+1)
res <- numer/denom
}
res
}
dPoissonGamma <- function(x,alpha,beta,log=FALSE)
{
if (log)
{
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- lognumer-logdenom
}else
{
numer <- gamma(x+alpha)*beta^x
denom <- gamma(alpha)*(1+beta)^(alpha+x)*gamma(x+1)
res <- numer/denom
}
res
}
dPoissonGamma_logtrue <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
sum(dPoissonGamma(x,alpha,beta,TRUE))
}
x <- data$freq
alpha0<-0.5
beta0<-290
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
x <- data$freq
alpha0<-100
beta0<-100
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
x <- data$freq
alpha0<-100
beta0<-1000
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
x <- data$freq
x
data <- data.frame(list(num=c(0,1,2,3,4,5,7,9)),list(freq=c(584,398,168,35,9,4,1,1)))
dim(data)
mean(data$freq)
var(data$freq)
dPoissonGamma <- function(x,alpha,beta,log=FALSE)
{
if (log)
{
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- lognumer-logdenom
}else
{
numer <- gamma(x+alpha)*beta^x
denom <- gamma(alpha)*(1+beta)^(alpha+x)*gamma(x+1)
res <- numer/denom
}
res
}
dPoissonGamma_logtrue <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
sum(dPoissonGamma(x,alpha,beta,TRUE))
}
x <- data$freq
alpha0<-100
beta0<-1000
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
theta0
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
?optim
data <- data.frame(list(num=c(0,1,2,3,4,5,7,9)),list(freq=c(584,398,168,35,9,4,1,1)))
dPoissonGamma <- function(x,alpha,beta,log=FALSE)
{
if (log)
{
lognumer <- lgamma(x+alpha)+x*log(beta)
logdenom <- lgamma(alpha)+(alpha+x)*log(1+beta)+lgamma(x+1)
res <- lognumer-logdenom
}else
{
numer <- gamma(x+alpha)*beta^x
denom <- gamma(alpha)*(1+beta)^(alpha+x)*gamma(x+1)
res <- numer/denom
}
res
}
dPoissonGamma_logtrue <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
sum(dPoissonGamma(x,alpha,beta,TRUE))
}
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
?dpois
dPoi_logtrue <- function(lambda, x) {
sum(dpois(x, lambda, log = TRUE))
}
xstart <- c(0,0)
fstart <- poi_gamma(xstart)
xstart <- c(0,0)
fstart <- dPoi_logtrue(xstart)
x <- data$freq
lambda0<-1
fit<-optim(par=lambda0,fn=dPoi_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
fit
x <- data$freq
lambda0<-10
fit<-optim(par=lambda0,fn=dPoi_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
x <- data$freq
lambda0<-100
fit<-optim(par=lambda0,fn=dPoi_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
x <- data$freq
lambda0<-1000
fit<-optim(par=lambda0,fn=dPoi_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
?optim
fit<-optim(par=lambda0,fn=dPoi_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=FALSE)
fit
x <- data$freq
lambda0<--10
fit<-optim(par=lambda0,fn=dPoi_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=FALSE)
fit
x <- data$freq
lambda0 <- 1
fit<-optim(par=lambda0,fn=dPoi_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=FALSE)
fit
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
dgamma(1,-37540.56,29299.55)
?dgamma
dgamma(x=1,shape=-37540.56,rate = 29299.55)
dgamma(x=1,shape=-37540.56,rate = 29299.55)
dgamma
dPoi_logtrue <- function(lambda, x) {
sum(dpois(x, lambda, log = TRUE))
}
x <- data$freq
lambda0 <- 1
fit<-optim(par=lambda0,fn=dPoi_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=FALSE)
fit
x <- data$freq
alpha0<-1
beta0<-1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1),hessian=TRUE)
fit
?optim
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1,maxit=1000),hessian=TRUE)
fit
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1,maxit=10000),hessian=TRUE)
fit
alpha0<-.5
beta0<-.1
theta0<-c(alpha0,beta0)
fit<-optim(par=theta0,fn=dPoissonGamma_logtrue,method="BFGS",x=x,control=list(fnscale=-1,maxit=10000),hessian=TRUE)
fit
dPoissonGamma_logtrue(c(1,1),data$freq)
dPoissonGamma_logtrue(c(10,1),data$freq)
dPoissonGamma_logtrue(c(100,1),data$freq)
dPoissonGamma_logtrue(c(100,10),data$freq)
dPoissonGamma_logtrue(c(100,-10),data$freq)
dPoissonGamma_logtrue(c(10000,10),data$freq)
dPoissonGamma_logtrue(c(10000,.01),data$freq)
dPoissonGamma_logtrue(c(10000,.00001),data$freq)
dPoissonGamma_logtrue(c(1,.00001),data$freq)
dPoissonGamma_logtrue <- function(theta, x){
alpha <- theta[1]
beta <- theta[2]
sum(dPoissonGamma(x,alpha,beta,TRUE))
}
